#option parsing
import sys
from optparse import OptionParser

#file system
import os, os.path, glob, tempfile

#other
import subprocess

aa_dir = sys.argv[1]
nn_dir = sys.argv[2]
aln_dir = sys.argv[3]
msa_met = sys.argv[4]
cluster = sys.argv[5]
#cluster = "CRG"

seq_list = []
for file_name in glob.glob(os.path.join(aa_dir, "*.fasta")):
	name=os.path.basename(file_name)
	seq_list.append(name[:name.index(".")] )
  
for seq_name in seq_list:
 	aa_aln_f = os.path.join(aln_dir, seq_name+"_aa.fasta_aln")
	nn_aln_f = os.path.join(aln_dir, seq_name+"_nn.fasta_aln")
	  
	if (not os.path.exists(aa_aln_f)):
		print (" align "+seq_name)
		seq_f = os.path.join(aa_dir, seq_name + ".fasta")
		command = ['t_coffee', seq_f] + TCOFFEE_PAREMETER + ['-outfile', aa_aln_f, ]
		if cluster == "CRG":
			run_on_crg_cluster(command)
	    	if cluster == "EBI":
			run_on_ebi_cluster(command)
	    	if cluster == "local":
			p = subprocess.call(command)
		
	if (not os.path.exists(nn_aln_f)):
	    	seq_f = os.path.join(nn_dir, seq_name + ".fasta")
	    	command = 't_coffee -other_pg seq_reformat -in ' + seq_f + ' -in2 ' + aa_aln_f + ' -action +thread_dna_on_prot_aln -output fasta > ' + nn_aln_f
		if cluster == "CRG":
			run_on_crg_cluster(command)
	    	if cluster == "EBI":
			run_on_ebi_cluster(command)
	    	if cluster == "local":
			p = subprocess.call(command, shell=True)

"""		
if (cluster == "CRG") | (cluster == "EBI"):
	while (len(os.walk(aln_dir).next()[2]) < 2*len(seq_list)):
		print('.')
		time.sleep(5)
	print('[DONE]\n')
"""	
#print('test\n')

#remove dnd tree files generated by T-Coffee
if (glob.glob('*.dnd')):
	os.system('rm *.dnd')
